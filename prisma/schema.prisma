// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  email      String      @unique
  password   String
  sessions   Session[]
  characters Character[]
}

model Session {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  expiresAt DateTime @default(now()) // We compute the actual default value in a client extension. This only exists to make the data optional.
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Character {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    Int
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  name      String
  age       Int       @default(157680) // 18 years in hours.
  actions   Action[]
  journal   Journal[]
}

model Tick {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  delta     Int
  epoch     Int
}

model Action {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  characterId      Int
  character        Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  name             String
  duration         Int
  startedAtEpoch   Int?
  completedAtEpoch Int?
}

model Journal {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  readAt         DateTime?
  characterId    Int
  character      Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  description    String
  writtenAtEpoch Int
}
